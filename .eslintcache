[{"/Users/jaypatel/Desktop/Project/tinder-live-jay/tinder-clone/src/index.js":"1","/Users/jaypatel/Desktop/Project/tinder-live-jay/tinder-clone/src/App.js":"2","/Users/jaypatel/Desktop/Project/tinder-live-jay/tinder-clone/src/reportWebVitals.js":"3","/Users/jaypatel/Desktop/Project/tinder-live-jay/tinder-clone/src/Header.js":"4","/Users/jaypatel/Desktop/Project/tinder-live-jay/tinder-clone/src/TinderCards.js":"5","/Users/jaypatel/Desktop/Project/tinder-live-jay/tinder-clone/src/SwipeButtons.js":"6"},{"size":500,"mtime":1608402847938,"results":"7","hashOfConfig":"8"},{"size":420,"mtime":1608453302312,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1608402847950,"results":"10","hashOfConfig":"8"},{"size":861,"mtime":1608447147132,"results":"11","hashOfConfig":"8"},{"size":1657,"mtime":1608449378817,"results":"12","hashOfConfig":"8"},{"size":1173,"mtime":1608454295525,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"15lpoqi",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jaypatel/Desktop/Project/tinder-live-jay/tinder-clone/src/index.js",[],["28","29"],"/Users/jaypatel/Desktop/Project/tinder-live-jay/tinder-clone/src/App.js",[],"/Users/jaypatel/Desktop/Project/tinder-live-jay/tinder-clone/src/reportWebVitals.js",[],"/Users/jaypatel/Desktop/Project/tinder-live-jay/tinder-clone/src/Header.js",[],"/Users/jaypatel/Desktop/Project/tinder-live-jay/tinder-clone/src/TinderCards.js",["30"],"import React, {useState} from 'react'\nimport TinderCard from \"react-tinder-card\"\nimport \"./TinderCards.css\"\n\nfunction TinderCards() {\n\n    const [people, setPeople] = useState([\n        {\n            name: 'Thomas Shelby',\n            url:\"https://hips.hearstapps.com/esquireuk.cdnds.net/17/15/1491835254-cillian-murphy.jpg?crop=1.00xw:0.705xh;0,0.00719xh&resize=640:*\"\n\n        },\n        {\n            name: 'Arther Shelby',\n            url: 'https://ichef.bbci.co.uk/images/ic/640x360/p07l7vms.jpg'\n        }\n    ])\n\n    //Swipe function to remove person\n    const swiped = (direction, nameToDelete) =>{\n        console.log(\"Removing\"+ nameToDelete);\n    }\n\n    const outOfFrame = (name) => {\n        console.log(name + \"left the screen\");\n    }\n\n    return (\n        <div className=\"tinderCards\">\n            <div className=\"tinderCards__cardContainer\">\n                \n                       \n            {people.map((person) => (\n                <TinderCard \n                className=\"swipe\"\n                key={person.name}\n                //where preventSwipe - User can swipe up and down also\n                preventSwipe={[\"up\", \"down\"]}\n                onSwipe={(dir) => swiped(dir, person.name)}\n                onCardLeftScreen={() => outOfFrame(person.name)}\n                >\n                    <div\n                    style={{backgroundImage: `url(${person.url})`}}\n                    className=\"card\"\n                    >\n                        <h3>{person.name}</h3>\n                    </div>\n                    \n                 </TinderCard>\n            ))}\n          </div> \n        </div>\n    )\n}\n\nexport default TinderCards\n","/Users/jaypatel/Desktop/Project/tinder-live-jay/tinder-clone/src/SwipeButtons.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":7,"column":20,"nodeType":"37","messageId":"38","endLine":7,"endColumn":29},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'setPeople' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]